<!DOCTYPE html>
<html>
<head>
    <title>DataGrid2</title>
    <style type="text/css">
        .DataGrid
        {
            background-color: pink;
            border: 1px solid red;
        }
        
        .Even td 
        {
            background-color:Lime;
        }
        .Odd td 
        {
            background-color:Silver;
        }

        .Popup .Contents
        {
            background-color: #fff;
	        border-right: #3300cc 1px solid;
	        border-top: #3300cc 1px solid;
	        border-left: #3300cc 1px solid;
	        border-bottom: #3300cc 1px solid;
        }
        .Popup .Title
        {
	        background-color: #3869ff;
            cursor: move;
            padding: 1mm;
        }
        .Popup .Title H1
        {
            border-style: none;
            margin: 1px 0px 1px 0px;
            padding: 0px 5mm 0px 0px;
            background-color: transparent;
            text-align: left;
            font-weight: bold;
            text-transform: none;
            color: #ffffff;
            font-style: normal;
            font-variant: small-caps;
            text-decoration: none;
            font-size: 1.25em;
        }
        .Popup .Body
        {
            padding: 1mm;
        }
        .Popup .Title .ImageButton
        {
            float: right;
            cursor: pointer;
        }
    </style>
    <script type="text/javascript" src="../libs/linq.min.js"></script>
    <script type="text/javascript" src="../libs/jquery-1.7.2.js"></script>
    <script type="text/javascript" src="../src/jpvs.js"></script>
    <script type="text/javascript" src="../src/Core.js"></script>
    <script type="text/javascript" src="../src/Resources.js"></script>
    <script type="text/javascript" src="../src/Event.js"></script>
    <script type="text/javascript" src="../src/Random.js"></script>
    <script type="text/javascript" src="../src/widgets/ImageButton.js"></script>
    <script type="text/javascript" src="../src/widgets/CheckBox.js"></script>
    <script type="text/javascript" src="../src/widgets/Table.js"></script>
    <script type="text/javascript" src="../src/widgets/Popup.js"></script>
    <script type="text/javascript" src="../src/widgets/TextBox.js"></script>
    <script type="text/javascript" src="../src/widgets/DropDownList.js"></script>
    <script type="text/javascript" src="../src/widgets/Button.js"></script>
    <script type="text/javascript" src="../src/widgets/LinkButton.js"></script>
    <script type="text/javascript" src="../src/widgets/Pager.js"></script>
    <script type="text/javascript" src="../src/widgets/Scroller.js"></script>
    <script type="text/javascript" src="../src/widgets/DataGrid.js"></script>
    <script type="text/javascript">
        //Sample data
        var TOTRECS = 200;
        var recs = [];
        for (var i = 0; i < TOTRECS; i++)
            recs.push({ A: "A" + i, B: "B" + i, C: "C" + i, D: jpvs.randomString(20) });


        jpvs(function ($W) {
            var tbl1 = $W.tbl1;
            var tbl2 = jpvs.DataGrid.create("#pnl");

            $W.btnRebind.click(bind);

            function data_sync(start, count, options) {
                start = start || 0;
                if (!count)
                    count = TOTRECS;

                //Entire data set
                var ret = Enumerable.From(recs);

                //Filter
                var filterExpr = (options && options.filter) || [];
                for (var i = 0; i < filterExpr.length; i++) {
                    var x = filterExpr[i];
                    if (x)
                        ret = ret.Where(applyFilter(x));
                }

                //Sort
                var sortExpr = (options && options.sort) || [];
                for (var i = 0; i < sortExpr.length; i++) {
                    var x = sortExpr[i];
                    if (x) {
                        var funcName;
                        if (i == 0)
                            funcName = x.descending ? "OrderByDescending" : "OrderBy";
                        else
                            funcName = x.descending ? "ThenByDescending" : "ThenBy";

                        //Apply the funcName: ret["OrderBy"]("$.FieldName"), that is: ret.OrderBy("$.FieldName")
                        ret = ret[funcName]("$." + x.name);
                    }
                }

                //Extract "count" records from "start" 
                var filteredCount = ret.Count();
                ret = ret.Skip(start).Take(count);

                //Return to caller
                return ({
                    total: filteredCount,
                    start: start,
                    data: ret.ToArray()
                });
            }

            function applyFilter(filterPred) {
                return function (rec) {
                    var fieldValue = rec[filterPred.name];
                    var value = filterPred.value;
                    var op = filterPred.operand;

                    if (op == "EQ")
                        return fieldValue.toUpperCase() == value.toUpperCase();
                    else if (op == "NEQ")
                        return fieldValue.toUpperCase() != value.toUpperCase();
                    else if (op == "LT")
                        return fieldValue.toUpperCase() < value.toUpperCase();
                    else if (op == "LTE")
                        return fieldValue.toUpperCase() <= value.toUpperCase();
                    else if (op == "GT")
                        return fieldValue.toUpperCase() > value.toUpperCase();
                    else if (op == "GTE")
                        return fieldValue.toUpperCase() >= value.toUpperCase();
                    else if (op == "STARTS")
                        return fieldValue.toUpperCase().indexOf(value.toUpperCase()) == 0;
                    else if (op == "NSTARTS")
                        return fieldValue.toUpperCase().indexOf(value.toUpperCase()) != 0;
                    else if (op == "CONTAINS")
                        return fieldValue.toUpperCase().indexOf(value.toUpperCase()) >= 0;
                    else if (op == "NCONTAINS")
                        return fieldValue.toUpperCase().indexOf(value.toUpperCase()) < 0;
                    else
                        return false;
                };
            }

            function data_async(start, count, options, callback) {
                setTimeout(function () {
                    var recs = data_sync(start, count, options);
                    callback(recs);
                }, 500);
            }

            var tmpl = [
                { body: { fieldName: "A"} },
                { body: { fieldName: "B"} },
                { body: { fieldName: "C"} },
                { body: { fieldName: "D"} },
                { body: { fieldName: "C"} },
                { body: { fieldName: "C"} },
                { body: { fieldName: "C"} },
                { body: { fieldName: "C"} },
                { body: { fieldName: "C"} }
            ];

            var sortExprs = [
                { value: "A", text: "Column 1" },
                { value: "B", text: "Column 2" },
                { value: "C", text: "Col 3" },
                { value: "D", text: "Random text" }
            ];

            $W.tbl1.sortAndFilterExpressions(sortExprs);
            $W.tbl2.sortAndFilterExpressions(sortExprs);
            $W.tbl3.sortAndFilterExpressions(sortExprs);

            $W.tbl1.enableSorting(true).enableFiltering(true).template(tmpl);
            $W.tbl2.enableSorting(true).enableFiltering(true).template(tmpl);
            $W.tbl3.enableSorting(true).enableFiltering(true).template(tmpl);

            $W.tbl1.binder(jpvs.DataGrid.defaultBinder);
            $W.tbl2.binder(jpvs.DataGrid.pagingBinder({ pageSize: 10, preserveCurrentPage: true }));
            $W.tbl3.binder(jpvs.DataGrid.scrollingBinder({ pageSize: 30, chunkSize: 40 }));

            var data = data_async;

            bind();

            function bind() {
                $W.tbl1.dataBind(data);
                $W.tbl2.dataBind(data);
                $W.tbl3.dataBind(data);
            }
        });
    </script>
</head>
<body>
    <button id="btnRebind">Rebind data</button>
    <table cellpadding="3" border="2" style="width:100%">
        <tr>
            <td style="vertical-align:top">
                <table id="tbl1" data-jpvs-type="DataGrid">
                    <thead><tr><th>Col1</th><th>Col2</th><th>Col3</th><th>Random data</th></tr></thead>
                </table>
            </td>
            <td style="vertical-align:top">
                <table id="tbl2" data-jpvs-type="DataGrid">
                    <thead><tr><th>Col1</th><th>Col2</th><th>Col3</th><th>Random data</th></tr></thead>
                </table>
            </td>
            <td style="vertical-align:top">
                <table id="tbl3" data-jpvs-type="DataGrid">
                    <thead><tr><th>Col1</th><th>Col2</th><th>Col3</th><th>Random data</th></tr></thead>
                </table>
            </td>
        </tr>
    </table>
</body>
</html>
